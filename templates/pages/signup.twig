{% extends 'base.twig' %}

{% block navigation %}
    {% include 'components/navigation.twig' with {'user': user, 'app_name': app_name} %}
{% endblock %}

{% block content %}
<div class="min-h-screen bg-black flex items-center justify-center p-4">
    <div class="w-full max-w-md">
        <div class="bg-gray-900 rounded-xl shadow-sm border border-gray-800 p-8">
            <div class="text-center mb-8">
                <div class="w-16 h-16 bg-blue-500 rounded-lg mx-auto mb-4 flex items-center justify-center">
                    <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z"/>
                        <path fill-rule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5z" clip-rule="evenodd"/>
                    </svg>
                </div>
                <h2 class="text-2xl font-bold text-white mb-2">Create Account</h2>
                <p class="text-gray-400">Start managing tickets today</p>
            </div>

            <form id="signupForm" class="space-y-5">
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1.5">
                        Email address
                    </label>
                    <input 
                        type="email" 
                        name="email" 
                        id="email"
                        class="w-full px-3 py-2 rounded-lg border border-gray-700 bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition"
                        placeholder="you@company.com"
                        required
                    />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1.5">
                        Password
                    </label>
                    <input 
                        type="password" 
                        name="password" 
                        id="password"
                        class="w-full px-3 py-2 rounded-lg border border-gray-700 bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition"
                        placeholder="Create a password"
                        required
                    />
                    <p class="mt-1 text-sm text-gray-500">Must be at least 6 characters</p>
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1.5">
                        Confirm Password
                    </label>
                    <input 
                        type="password" 
                        name="confirmPassword" 
                        id="confirmPassword"
                        class="w-full px-3 py-2 rounded-lg border border-gray-700 bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition"
                        placeholder="Confirm your password"
                        required
                    />
                </div>

                <button type="submit" class="w-full bg-blue-500 text-white py-3 rounded-lg text-lg font-medium hover:bg-blue-600 transition">
                    Create Account
                </button>
            </form>

            <div class="mt-6 text-center">
                <a href="/login" class="text-sm text-blue-400 hover:text-blue-300 font-medium transition">
                    Already have an account? <span class="underline">Sign in</span>
                </a>
            </div>

            <div class="mt-4 text-center">
                <a href="/" class="text-sm text-gray-500 hover:text-gray-400 transition">
                    Back to Home
                </a>
            </div>
        </div>
    </div>
</div>

<div id="toast" class="hidden fixed top-4 right-4 bg-gray-800 border border-gray-700 rounded-lg shadow-lg p-4 max-w-sm z-50">
    <div class="flex items-center space-x-3">
        <div id="toast-icon"></div>
        <p id="toast-message" class="text-white text-sm"></p>
    </div>
</div>

{% endblock %}

{% block extra_js %}
<script>
(function() {
    const session = localStorage.getItem('ticketapp_session');
    
    if (session) {
        try {
            const sessionData = JSON.parse(session);
            if (sessionData.expiresAt && sessionData.expiresAt > Date.now()) {
                window.location.href = '/dashboard';
                return;
            }
        } catch (e) {
            localStorage.removeItem('ticketapp_session');
        }
    }
})();
const MOCK_USERS = [
    { id: 1, email: 'test@example.com', password: 'password123' },
    { id: 2, email: 'demo@example.com', password: 'demo123' },
    { id: 3, email: 'admin@ticketflow.com', password: 'admin123' }
];

function showToast(message, type = 'success') {
    const toast = document.getElementById('toast');
    const toastMessage = document.getElementById('toast-message');
    const toastIcon = document.getElementById('toast-icon');
    
    const icons = {
        success: '<svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/></svg>',
        error: '<svg class="w-5 h-5 text-red-500" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/></svg>'
    };
    
    if (toast && toastMessage && toastIcon) {
        toastMessage.textContent = message;
        toastIcon.innerHTML = icons[type] || icons.success;
        toast.classList.remove('hidden');
        
        setTimeout(() => {
            toast.classList.add('hidden');
        }, 4000);
    } else {
        console.log(`${type}: ${message}`);
        alert(`${type.toUpperCase()}: ${message}`);
    }
}

function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}

function handleSignup(e) {
    e.preventDefault();
    
    const email = document.getElementById('email')?.value.trim();
    const password = document.getElementById('password')?.value;
    const confirmPassword = document.getElementById('confirmPassword')?.value;

    if (!email || !password || !confirmPassword) {
        showToast('Please fill in all fields', 'error');
        return;
    }

    if (!isValidEmail(email)) {
        showToast('Please enter a valid email address', 'error');
        return;
    }

    if (password.length < 6) {
        showToast('Password must be at least 6 characters', 'error');
        return;
    }

    if (password !== confirmPassword) {
        showToast('Passwords do not match', 'error');
        return;
    }

    const registeredUsers = JSON.parse(localStorage.getItem('ticketapp_users') || '[]');
    const mockUserExists = MOCK_USERS.some(u => u.email === email);
    const registeredUserExists = registeredUsers.some(u => u.email === email);
    
    if (mockUserExists || registeredUserExists) {
        showToast('Email already registered', 'error');
        return;
    }

    const newUser = {
        id: `user_${Date.now()}`,
        email: email,
        password: password,
        createdAt: new Date().toISOString()
    };

    registeredUsers.push(newUser);
    localStorage.setItem('ticketapp_users', JSON.stringify(registeredUsers));

    const session = {
        userId: newUser.id,
        email: newUser.email,
        expiresAt: Date.now() + (7 * 24 * 60 * 60 * 1000) 
    };

    localStorage.setItem('ticketapp_session', JSON.stringify(session));
    showToast('Account created successfully!', 'success');
    
    setTimeout(() => {
        window.location.href = '/dashboard';
    }, 1000);
}

document.addEventListener('DOMContentLoaded', function() {
    const signupForm = document.getElementById('signupForm');
    if (signupForm) {
        signupForm.addEventListener('submit', handleSignup);
    }
});
</script>
{% endblock %}